<apex:page showHeader="false" standardStylesheets="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0">    
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">    
<head>
  <title>Salesforce Lightning Design System Trailhead Module</title>
  <apex:stylesheet value="{!URLFOR($Resource.SLDS102, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
</head>    
<!-- sivas notes - remoteObjectModel - is a good approach - just add the field names to disply -->
<apex:remoteObjects >
  <apex:remoteObjectModel name="Account" fields="Id,Name,LastModifiedDate"/>
</apex:remoteObjects>    
<body>    
  <!-- REQUIRED SLDS WRAPPER -->
<div class="slds">    
    <!-- MASTHEAD -->
    <p class="slds-text-heading--label slds-m-bottom--small">Salesforce Lightning Design System Trailhead Module</p>
    <!-- / MASTHEAD -->    
      <!-- PAGE HEADER -->
	<div class="slds-page-header" role="banner">
 		<!-- LAYOUT GRID -->
 		<div class="slds-grid">
            <!-- GRID COL -->
            <div class="slds-col">
                <!-- HEADING AREA -->
                    <!-- MEDIA OBJECT = FIGURE + BODY -->
                    <div class="slds-media">
                      <div class="slds-media__figure">
                        <span class="slds-avatar slds-avatar--large">
                          <img src="{!URLFOR($Resource.sunsky__SLDS102, 'assets/images/avatar1.jpg')}" alt="portrait" />
                        </span>
                      </div>
                      <div class="slds-media__body">
                        <p class="slds-text-heading--label">Accounts</p>
                        <h1 class="slds-text-heading--medium">My Accounts</h1>
                      </div>
                    </div>
                    <!-- / MEDIA OBJECT -->
                <!-- /HEADING AREA -->
            </div>
            <!-- GRID COL -->
            <div class="slds-col slds-no-flex slds-align-middle">
            <div class="slds-button-group" role="group">
                <button class="slds-button slds-button--neutral">
                  New Account
                </button>
                <button class="slds-button slds-button--neutral">
                  More
                </button>
              </div>
            </div>
            <!-- / GRID COL -->
         </div>
  		<!-- / LAYOUT GRID -->
  		<p class="slds-text-body--small slds-m-top--x-small">COUNT items</p>
	</div>
    <!-- / PAGE HEADER -->    
    <!-- PRIMARY CONTENT WRAPPER -->
    <div class="myapp">
            <!-- CREATE NEW ACCOUNT -->
             <div aria-labelledby="newaccountform">
            <!-- BOXED AREA -->
    	    <fieldset class="slds-box slds-theme--default slds-container--small">
            <legend id="newaccountform" class="slds-text-heading--medium slds-p-vertical--medium">Add a new account</legend>
            <!-- CREATE NEW ACCOUNT FORM -->
    	     <form class="slds-form--stacked">
                    <!-- Sivas Icon Test -->
                    <span class="slds-icon__container slds-icon-standard-account">
                    <svg aria-hidden="true" class="slds-icon">
                        <use xlink:href="{!URLFOR($Resource.sunsky__SLDS102,
                            'assets/icons/standard-sprite/svg/symbols.svg#account')}"></use>
                    </svg>
                        <span class="slds-assistive-text">Account Icon</span>
                    </span>
                    <!-- / Sivas Icon Test -->
         
                <div class="slds-form-element">
    	        <label class="slds-form-element__label" for="accountName">Name</label>
        	    	<div class="slds-form-element__control">
            	    	<input id="accountName" class="slds-input" type="text" placeholder="New account"/>
              		</div>
            	</div>
            	<button class="slds-button slds-button--brand slds-m-top--medium" type="button" onClick="createAccount()">Create Account</button>
          	</form>
          	<!-- CREATE NEW ACCOUNT FORM -->
            </fieldset>
        	<!-- / BOXED AREA -->
       		</div>
            <!-- / CREATE NEW ACCOUNT -->
            <!-- ACCOUNT LIST TABLE -->
            	 <div id="accountList" class="slds-p-vertical--medium"></div>
            <!-- / ACCOUNT LIST TABLE -->    
            </div>
	<!-- / PRIMARY CONTENT WRAPPER -->
	<!-- FOOTER -->
	<footer role="contentinfo" class="slds-p-around--large">
  <!-- LAYOUT GRID -->
  <div class="slds-grid slds-grid--align-spread">
    <p class="slds-col">Salesforce Lightning Design System Example</p>
    <p class="slds-col">&copy; SunSky Technologies LLC</p>
  </div>
  <!-- / LAYOUT GRID -->
</footer>
	<!-- / FOOTER -->
    </div>
  <!-- / REQUIRED SLDS WRAPPER -->    
</body>    

<!-- JAVASCRIPT -->
<!-- sivas notes All retrieve and creation of table is done by javascript
-->

<script>
  var account = new SObjectModel.Account();
  var outputDiv = document.getElementById("accountList");

  function updateOutputDiv() {

    account.retrieve(
      {orderby: [{LastModifiedDate: 'DESC'}], limit: 10},
      function(error, records) {
        if (error) {
          alert(error.message);
        } else {

          // create data table
          var dataTable = document.createElement('table');
          dataTable.className = 'slds-table slds-table--bordered';

          // add header row
          var tableHeader = dataTable.createTHead();
          var tableHeaderRow = tableHeader.insertRow();

          var tableHeaderRowCell1 = tableHeaderRow.insertCell(0);
          tableHeaderRowCell1.appendChild(document.createTextNode('Account name'));
          tableHeaderRowCell1.setAttribute('scope', 'col');

          var tableHeaderRowCell2 = tableHeaderRow.insertCell(1);
          tableHeaderRowCell2.appendChild(document.createTextNode('Account ID'));
          tableHeaderRowCell2.setAttribute('scope', 'col');

          // build table body
          var tableBody = dataTable.appendChild(document.createElement('tbody'))
          var dataRow, dataRowCell1, dataRowCell2, recordName, recordId;
          records.forEach(function(record) {

              dataRow = tableBody.insertRow();

              dataRowCell1 = dataRow.insertCell(0);
              recordName = document.createTextNode(record.get("Name"));
              dataRowCell1.appendChild(recordName);

              dataRowCell2 = dataRow.insertCell(1);
              recordId = document.createTextNode(record.get("Id"));
              dataRowCell2.appendChild(recordId);

          });

          // create data table wrapper
          var tableWrapper = document.createElement('div');
          tableWrapper.className = 'slds-scrollable--x';
          tableWrapper.appendChild(dataTable);

          if (outputDiv.firstChild) {
            // replace table if it already exists
            // see later in tutorial
            outputDiv.replaceChild(tableWrapper, outputDiv.firstChild);
          } else {
            outputDiv.appendChild(tableWrapper);
          }
        }
      }
    );
  }
function createAccount() {
  var accountName = document.getElementById("accountName").value;
  var account = new SObjectModel.Account();
  account.create({Name: accountName}, function(error, records) {
    if (error) {
      alert(error.message);
    } else {
      updateOutputDiv();
    }
  });
  return false;
}
  updateOutputDiv();
 </script>
<!-- / JAVASCRIPT -->
</html>
</apex:page>